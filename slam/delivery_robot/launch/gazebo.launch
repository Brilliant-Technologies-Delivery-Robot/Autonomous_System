<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="world_name" value="$(find delivery_robot)/worlds/simple_house.world"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" /> -->
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- <rosparam file="$(find delivery_robot)/config/new_ros_controllers.yaml" command="load"/> -->

  <!-- load the controllers -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args=" right_wheel_velocity_controller left_wheel_velocity_controller joint_state_controller"/> -->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/delivery_robot/joint_states" />
  </node>

  <!-- define robot describtion-->
  <param name="robot_description" textfile="$(find delivery_robot)/urdf/delivery_robot.urdf" />

  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find delivery_robot)/urdf/delivery_robot.urdf -urdf -model delivery_robot" output="screen" />
  <!-- <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" /> -->
</launch>
